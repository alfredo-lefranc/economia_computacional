fdr <- pvalues %>% arrange(p.value) %>%
mutate(indice = 1:length(p.value)) %>%
mutate(`q*k/n` = q*(indice/length(p.value))) %>%
mutate(significancia = p.value <= `q*k/n`)
ggplot(data =fdr, aes(x=indice,y=p.value))+
geom_point()+
geom_abline(slope=q/length(pvalues$p.value),col='red')+
theme_bw()+
labs(title="Ajuste FDR") + theme_economist() + scale_fill_economist()
# con zoom
ggplot(data =fdr, aes(x=indice,y=p.value))+
geom_point()+
geom_abline(slope=q/length(pvalues$p.value),col='red')+
theme_bw()+
labs(title="Ajuste FDR (zoom in p<0.05)") + theme_economist() + scale_fill_economist()+
ylim(c(0,0.05))
# prueba
# abc <- c(0.52, 0.07, 0.013, 0.0001, 0.26, 0.04, 0.01, 0.15, 0.03, 0.0002)
# alternativa
# fdr2 <- p.adjust(p=pvalues$p.value,method="BH")
# names(fdr2) <- fdr2 <=0.05
# Antes
sum(pvalues$p.value<=0.05)
# Con FDR
pestrella <- fdr %>% filter(significancia == 'TRUE')
pestrella <- max(pestrella$`q*k/n`)
sum(pvalues$p.value<=pestrella)
q <- 0.05
bonferroni <- pvalues %>% arrange(p.value) %>%
mutate(indice = 1:length(p.value)) %>%
mutate(`alpha/(m+1-k)`= q /(length(p.value)+1-indice)) %>%
mutate(significancia = p.value <= `alpha/(m+1-k)`)
sum(bonferroni$significancia=='TRUE')
# Tenemos únicamente 11 variables que resultan ser significativas con el ajuste de Holm-Bonferroni
corte <- bonferroni %>% filter(significancia == 'FALSE')
corte <- min(corte$`alpha/(m+1-k)`)
ggplot(data =bonferroni, aes(x=indice,y=p.value))+
geom_point()+
geom_hline(yintercept = corte,col='red')+
theme_bw()+
labs(title="Ajuste Holm-Bonferroni") + theme_economist() + scale_fill_economist()
# con zoom
ggplot(data =bonferroni, aes(x=indice,y=p.value))+
geom_point()+
geom_hline(yintercept= corte,col='red')+
theme_bw()+
labs(title="Ajuste Holm-Bonferroni (zoom p<0.05)") + theme_economist() + scale_fill_economist()+
ylim(c(0,0.05))
# comparación FDR vs. Holm-Bonferroni
ggplot()+
geom_point(data=fdr, aes(x=indice,y=p.value))+
geom_abline(slope=q/length(orden$p.value),col='red')+
geom_point()+
geom_hline(aes(x=indice,y=p.value, linetype="H-B"),yintercept= corte,col='blue',show.legend=TRUE)+
labs(title="Ajuste FDR vs. Holm-Bonferroni (zoom p<0.05)") + theme_economist() + scale_fill_economist()+
ylim(c(0,0.05))
q <- 0.05
bonferroni <- pvalues %>% arrange(p.value) %>%
mutate(indice = 1:length(p.value)) %>%
mutate(`alpha/(m+1-k)`= q /(length(p.value)+1-indice)) %>%
mutate(significancia = p.value <= `alpha/(m+1-k)`)
sum(bonferroni$significancia=='TRUE')
# Tenemos únicamente 11 variables que resultan ser significativas con el ajuste de Holm-Bonferroni
corte <- bonferroni %>% filter(significancia == 'FALSE')
corte <- min(corte$`alpha/(m+1-k)`)
ggplot(data =bonferroni, aes(x=indice,y=p.value))+
geom_point()+
geom_hline(yintercept = corte,col='red')+
theme_bw()+
labs(title="Ajuste Holm-Bonferroni") + theme_economist() + scale_fill_economist()
# con zoom
ggplot(data =bonferroni, aes(x=indice,y=p.value))+
geom_point()+
geom_hline(yintercept= corte,col='red')+
theme_bw()+
labs(title="Ajuste Holm-Bonferroni (zoom p<0.05)") + theme_economist() + scale_fill_economist()+
ylim(c(0,0.05))
# comparación FDR vs. Holm-Bonferroni
ggplot()+
geom_point(data=fdr, aes(x=indice,y=p.value))+
geom_abline(slope=q/length(pvalues$p.value),col='red')+
geom_point()+
geom_hline(aes(x=indice,y=p.value, linetype="H-B"),yintercept= corte,col='blue',show.legend=TRUE)+
labs(title="Ajuste FDR vs. Holm-Bonferroni (zoom p<0.05)") + theme_economist() + scale_fill_economist()+
ylim(c(0,0.05))
pvalues<-as.data.frame(tidy(model_a2))
pvalues <- pvalues %>% filter(p.value != "NA") %>% select(p.value)%>%
arrange(desc(p.value))
colSums(!is.na(pvalues))
nrow(pvalues)
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=70, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.28, label=paste("p value =",.05), y=10),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histograma de p values") +theme_economist() + scale_fill_economist()
# FDR
q <- 0.05
fdr <- pvalues %>% arrange(p.value) %>%
mutate(indice = 1:length(p.value)) %>%
mutate(`q*k/n` = q*(indice/length(p.value))) %>%
mutate(significancia = p.value <= `q*k/n`)
ggplot(data =fdr, aes(x=indice,y=p.value))+
geom_point()+
geom_abline(slope=q/length(pvalues$p.value),col='red')+
theme_bw()+
labs(title="Ajuste FDR") + theme_economist() + scale_fill_economist()
# con zoom
ggplot(data =fdr, aes(x=indice,y=p.value))+
geom_point()+
geom_abline(slope=q/length(pvalues$p.value),col='red')+
theme_bw()+
labs(title="Ajuste FDR (zoom in p<0.05)") + theme_economist() + scale_fill_economist()+
ylim(c(0,0.05))
# prueba
# abc <- c(0.52, 0.07, 0.013, 0.0001, 0.26, 0.04, 0.01, 0.15, 0.03, 0.0002)
# alternativa
# fdr2 <- p.adjust(p=pvalues$p.value,method="BH")
# names(fdr2) <- fdr2 <=0.05
# Antes
sum(pvalues$p.value<=0.05)
# Con FDR
pestrella <- fdr %>% filter(significancia == 'TRUE')
pestrella <- max(pestrella$`q*k/n`)
sum(pvalues$p.value<=pestrella)
q <- 0.05
bonferroni <- pvalues %>% arrange(p.value) %>%
mutate(indice = 1:length(p.value)) %>%
mutate(`alpha/(m+1-k)`= q /(length(p.value)+1-indice)) %>%
mutate(significancia = p.value <= `alpha/(m+1-k)`)
sum(bonferroni$significancia=='TRUE')
# Tenemos únicamente 11 variables que resultan ser significativas con el ajuste de Holm-Bonferroni
corte <- bonferroni %>% filter(significancia == 'FALSE')
corte <- min(corte$`alpha/(m+1-k)`)
ggplot(data =bonferroni, aes(x=indice,y=p.value))+
geom_point()+
geom_hline(yintercept = corte,col='red')+
theme_bw()+
labs(title="Ajuste Holm-Bonferroni") + theme_economist() + scale_fill_economist()
# con zoom
ggplot(data =bonferroni, aes(x=indice,y=p.value))+
geom_point()+
geom_hline(yintercept= corte,col='red')+
theme_bw()+
labs(title="Ajuste Holm-Bonferroni (zoom p<0.05)") + theme_economist() + scale_fill_economist()+
ylim(c(0,0.05))
# comparación FDR vs. Holm-Bonferroni
ggplot()+
geom_point(data=fdr, aes(x=indice,y=p.value))+
geom_abline(slope=q/length(pvalues$p.value),col='red')+
geom_point()+
geom_hline(aes(x=indice,y=p.value, linetype="H-B"),yintercept= corte,col='blue',show.legend=TRUE)+
labs(title="Ajuste FDR vs. Holm-Bonferroni (zoom p<0.05)") + theme_economist() + scale_fill_economist()+
ylim(c(0,0.05))
q <- 0.05
bonferroni <- pvalues %>% arrange(p.value) %>%
mutate(indice = 1:length(p.value)) %>%
mutate(`alpha/(m+1-k)`= q /(length(p.value)+1-indice)) %>%
mutate(significancia = p.value <= `alpha/(m+1-k)`)
sum(bonferroni$significancia=='TRUE')
# Tenemos únicamente 11 variables que resultan ser significativas con el ajuste de Holm-Bonferroni
corte <- bonferroni %>% filter(significancia == 'FALSE')
corte <- min(corte$`alpha/(m+1-k)`)
ggplot(data =bonferroni, aes(x=indice,y=p.value))+
geom_point()+
geom_hline(yintercept = corte,col='red')+
theme_bw()+
labs(title="Ajuste Holm-Bonferroni")+
theme_economist() + scale_fill_economist()
# con zoom
ggplot(data =bonferroni, aes(x=indice,y=p.value))+
geom_point()+
geom_hline(yintercept= corte,col='red')+
theme_bw()+
labs(title="Ajuste Holm-Bonferroni (zoom p<0.05)")+
theme_economist() + scale_fill_economist()+
ylim(c(0,0.05))
# comparación FDR vs. Holm-Bonferroni
ggplot()+
geom_point(data=fdr, aes(x=indice,y=p.value))+
geom_abline(slope=q/length(pvalues$p.value),col='red')+
geom_point()+
geom_hline(aes(x=indice,y=p.value, linetype="H-B"),yintercept= corte,col='blue',show.legend=TRUE)+
labs(title="Ajuste FDR vs. Holm-Bonferroni (zoom p<0.05)") +
theme_economist() + scale_fill_economist()+
ylim(c(0,0.05))
base <- base %>% group_by(household_id) %>%
mutate(id_trans = sequence(n())) %>% ungroup()
base$id<-paste(base$household_id, base$id_trans, sep="-")
#Ejemplo:
kable(head(base$id))
base <- base %>% group_by(household_id) %>%
mutate(id_trans = sequence(n())) %>% ungroup()
base$id<-paste(base$household_id, base$id_trans, sep="-")
#Ejemplo:
kable(head(base$id), col.names = c("Ejemplo"), booktabs=T)%>%
kable_styling(position = "center",latex_options = "repeat_header")
susp<-base%>% select(fips_state_code,fips_county_code,
scantrack_market_identifier)%>%
mutate(estado_condado=paste(fips_state_code,"-",fips_county_code))%>%
group_by(estado_condado,scantrack_market_identifier)%>%
summarize(n())
head(susp)
length(unique((susp$estado_condado)))
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n())
head(susp_2)
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n())
(susp_2)
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n())
head(susp_2)
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n())
head(susp_2,10)
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
head(susp_2)
mean(susp_2$`n()`)
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
head(susp_2)
#promedio de categoría de scantrack_market_identifier por estado
mean(susp_2$`n()`)
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
(susp_2)
#promedio de categoría de scantrack_market_identifier por estado
mean(susp_2$`n()`)
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
kable(head(susp_2,10),booktabs=T,
col.names = c("Ejemplo Estado","scantrack_market_identifier","Observaciones"))%>%
kable_styling(position = "center",latex_options = "repeat_header")
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
(susp_2)
#promedio de categoría de scantrack_market_identifier por estado
mean(susp_2$`n()`)
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
kable(head(susp_2,10),booktabs=T,
col.names = c("Ejemplo Estado","diferentes scantrack_market_identifier"))%>%
kable_styling(position = "center",latex_options = "repeat_header")
#promedio de categoría de scantrack_market_identifier por estado
mean(susp_2$`n()`)
View(susp_2)
View(susp)
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n())
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(max(n()))
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(max(n()))
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize((n()))
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n())
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>%
summarize(max(n()))
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize((n()))
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n())
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize((n()))
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>%
summarize(moda = max(`n()`))
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n())
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>%
summarize(moda = max(`n()`))
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>%
summarize(moda = max(`n()`))
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n())
base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarise(mode = mode(scantrack_market_identifier))
base %>% elect(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1)
base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1)
llave_imputaciones<-base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier)
View(llave_imputaciones)
llave_imputaciones<-base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1)
#Imputación de la moda
#Creo mi tabla de modas
llave_imputaciones<-base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1) %>%
rename(scantrack_market_identifier = moda)
#Imputación de la moda
#Creo mi tabla de modas
llave_imputaciones<-base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1) %>%
rename(moda=scantrack_market_identifier)
llave_imputaciones$n<-NULL
#Imputo
base<-merge(base,llave_imputaciones, by = "fips_state_code")
base<-base%>%mutate(scantrack_market_identifier=ifelse(is.na(scantrack_market_identifier),moda,scantrack_market_identifier))
View(base)
#Imputación de la moda
#Creo mi tabla de modas
llave_imputaciones<-base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1) %>%
rename(moda=scantrack_market_identifier)
llave_imputaciones$n<-NULL
#Imputo
base<-merge(base,llave_imputaciones, by = "fips_state_code")
base<-base%>%mutate(scantrack_market_identifier_2=ifelse(is.na(scantrack_market_identifier),moda,scantrack_market_identifier))
View(llave_imputaciones)
#Imputación de la moda
#Creo mi tabla de modas
llave_imputaciones<-base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1) %>%
rename(moda=scantrack_market_identifier)
llave_imputaciones$n<-NULL
#Imputo
base<-merge(base,llave_imputaciones, by = "fips_state_code")
base<-base%>%mutate(scantrack_market_identifier_2=
ifelse(is.na(scantrack_market_identifier),moda,scantrack_market_identifier))
View(base)
#Imputación de la moda
#Creo mi tabla de modas
llave_imputaciones<-base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1) %>%
rename(moda=scantrack_market_identifier)
llave_imputaciones$n<-NULL
#Imputo
base<-merge(base,llave_imputaciones, by = "fips_state_code")
base<-base%>%mutate(scantrack_market_identifier_2=
ifelse(is.na(scantrack_market_identifier),moda,scantrack_market_identifier))
#Imputación de la moda
#Creo mi tabla de modas
llave_imputaciones<-base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1) %>%
rename(moda=scantrack_market_identifier)
llave_imputaciones$n<-NULL
#Imputo
base<-merge(base,llave_imputaciones, by = "fips_state_code")
base<-base%>%mutate(scantrack_market_identifier_2=
ifelse(is.na(scantrack_market_identifier),moda,scantrack_market_identifier))
#Imputación de la moda
#Creo mi tabla de modas
llave_imputaciones<-base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1) %>%
rename(moda=scantrack_market_identifier)
llave_imputaciones$n<-NULL
#Imputo
base<-merge(base,llave_imputaciones, by = "fips_state_code")
count(is.na(base$moda))
count(is.na(base$moda))
(is.na(base$moda))
(is.na(base$moda))
(is.na(base$moda))
rowSums(is.na(base$moda))
sum(!complete.cases(base$moda))
colsum(is.na(base$moda))
base$moda.x
sum(is.na(base$moda.x))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = F)
# Carga las librerias
library(ggplot2)
library(dplyr)
library(RCT)
library(knitr)
library(broom)
library(stargazer)
library(kableExtra)
library(naniar)
library(ggthemes)
# Carga la base de datos
base<-read.csv("BenAndJerry.csv")
columnas <- (as.data.frame(colnames(base)))
kable(columnas, booktabs=T, align = 'c', col.names = c("Columnas"), longtable=T) %>%
kable_styling(position = "center",latex_options = "repeat_header")
sum(as.numeric(duplicated(base)))
base <- base %>% group_by(household_id) %>%
mutate(id_trans = sequence(n())) %>% ungroup()
base$id<-paste(base$household_id, base$id_trans, sep="-")
#Ejemplo:
kable(head(base$id), col.names = c("Ejemplo"), booktabs=T)%>%
kable_styling(position = "center",latex_options = "repeat_header")
# subset de las variables de texto
charvar <- select(base,c(6:8,32,33))
# revisamos que no tengan valores vacíos
table(charvar$size1_descr=="")
table(charvar$flavor_descr=="")
table(charvar$formula_descr=="")
table(charvar$female_head_birth=="")
table(charvar$male_head_birth=="")
base$female_head_birth[base$female_head_birth==""]<- NA
base$male_head_birth[base$male_head_birth==""]<-NA
kable( (base %>% select_if(~sum(is.na(.)) > 0) %>%
miss_var_summary()), booktabs=T, align = 'c',
col.names = c("Variale", "Cantidad","%"),digits = 2)%>%
kable_styling(position = "center")
summary(factor(base$promotion_type))
base$promotion_type[is.na(base$promotion_type)] <- 0
summary(factor(base$scantrack_market_identifier))
susp<-base%>% select(fips_state_code,fips_county_code,
scantrack_market_identifier)%>%
mutate(estado_condado=paste(fips_state_code,"-",fips_county_code))%>%
group_by(estado_condado,scantrack_market_identifier)%>%
summarize(n())
kable(head(susp),booktabs=T,
col.names = c("Ejemplo Estado-Condado","scantrack_market_identifier","Observaciones"))%>%
kable_styling(position = "center",latex_options = "repeat_header")
length(unique((susp$estado_condado)))
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n())
kable(head(susp_2,10),booktabs=T,
col.names = c("Ejemplo Estado","scantrack_market_identifier","Observaciones"))%>%
kable_styling(position = "center",latex_options = "repeat_header")
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
kable(head(susp_2,10),booktabs=T,
col.names = c("Ejemplo Estado","cantidad de scantrack_market_identifier diferentes"))%>%
kable_styling(position = "center",latex_options = "repeat_header")
#promedio de categoría de scantrack_market_identifier por estado
mean(susp_2$`n()`)
#Imputación de la moda
#Creo mi tabla de modas
llave_imputaciones<-base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1) %>%
rename(moda=scantrack_market_identifier)
llave_imputaciones$n<-NULL
#Imputo
base<-merge(base,llave_imputaciones, by = "fips_state_code")
base<-base%>%mutate(scantrack_market_identifier=
ifelse(is.na(scantrack_market_identifier),moda,scantrack_market_identifier))
sum(is.na(base$scantrack_market_identifier))
sum(is.na(base$moda))
sum(is.na(base$scantrack_market_identifier))
base$scantrack_market_identifier[is.na(base$scantrack_market_identifier)] <- 0
