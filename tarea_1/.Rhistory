model_a<-lm(unit_price~quantity,data = base)
stargazer(model_a, type = "latex", title="Regresión", digits=1)
# quitamos columnas irrelevantes
base<- select (base,-c(sabores_pop))
# convertimos sabores en dummies y ponemos como base los de vainilla
base$flavor_descr <- relevel(factor(base$flavor_descr),"VAN")
#base$size1_descr <- factor(base$size1_descr,levels=1:2, labels=c("small","big"))
# uso de cupon / no uso de cupon
base$coupon <- factor(base$coupon_value>0)
# región
levels(base$region) <- c("East","Central","South","West")
# estado civil
base$married <- factor(base$marital_status==1)
# raza
base$race <- factor(base$race, levels= 1:4)
levels(base$race) <- c("White","Black","Asian","Other")
# hispano
base$hispanic_origin <- factor(base$hispanic_origin==1)
# fórmula
base$formula_descr <- as.factor(base$formula_descr)
# tamaño
base$size1_descr <- as.factor(base$size1_descr)
# tvs
base$pay_tv <- base$tv_items>1
# internet
base$internet <- base$household_internet_connection==1
base$log_price <- log(base$unit_price+1)
base_reg<- base[,c("quantity",
"log_price",
"flavor_descr",
"size1_descr",
"household_income",
"household_size",
"coupon",
"region",
"married",
"race",
"hispanic_origin",
"promotion_type",
"age_of_female_head",
"age_of_male_head",
"age_and_presence_of_children",
"male_head_employment",
"female_head_employment",
"male_head_education","female_head_education",
"male_head_occupation",
"female_head_occupation",
"household_composition",
"type_of_residence",
"kitchen_appliances",
"pay_tv",
"internet")]
model_a2<-lm(log(quantity+1) ~ .,data = base_reg)
summary(model_a2)
stargazer(model_a2, type = "text", title="Regresión", digits=1)
# para model_a2
(names(model_a2))
glance(model_a2)
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
summary(model_a2)
model_a<-lm(unit_price~quantity,data = base)
stargazer(model_a, type = "latex", title="Regresión", digits=1)
# quitamos columnas irrelevantes
base<- select (base,-c(sabores_pop))
base<-base%>%
mutate(sabores_pop= ifelse(flavor_descr=='CHERRY GRCA','cherry grca',
(ifelse(flavor_descr=='CHC FUDGE BROWNIE','chc fudge brownie',
(ifelse(flavor_descr=='CHC CHIP C-DH','chc chip c-dh','otros'))))))
ggplot(data = base, aes(y=log(quantity+1),
x=log(unit_price+1),
col=as.factor(sabores_pop))) +
geom_point(size=1, alpha=0.3) +
geom_smooth(method='lm',
formula= y~(x),
se=FALSE, size=1)+
theme_bw()+
labs(title="Elasticidad precio demanda de helado por sabor",
y="Cantidad demandada (log)",
x="Precio unitario (log)",
col="Sabor")+ theme_economist() + scale_fill_economist()
model_a<-lm(unit_price~quantity,data = base)
stargazer(model_a, type = "latex", title="Regresión", digits=1)
# quitamos columnas irrelevantes
base<- select (base,-c(sabores_pop))
# convertimos sabores en dummies y ponemos como base los de vainilla
base$flavor_descr <- relevel(factor(base$flavor_descr),"VAN")
#base$size1_descr <- factor(base$size1_descr,levels=1:2, labels=c("small","big"))
# uso de cupon / no uso de cupon
base$coupon <- factor(base$coupon_value>0)
# región
levels(base$region) <- c("East","Central","South","West")
# estado civil
base$married <- factor(base$marital_status==1)
# raza
base$race <- factor(base$race, levels= 1:4)
levels(base$race) <- c("White","Black","Asian","Other")
# hispano
base$hispanic_origin <- factor(base$hispanic_origin==1)
# fórmula
base$formula_descr <- as.factor(base$formula_descr)
# tamaño
base$size1_descr <- as.factor(base$size1_descr)
# tvs
base$pay_tv <- base$tv_items>1
# internet
base$internet <- base$household_internet_connection==1
base$log_price <- log(base$unit_price+1)
base_reg<- base[,c("quantity",
"log_price",
"flavor_descr",
"size1_descr",
"household_income",
"household_size",
"coupon",
"region",
"married",
"race",
"hispanic_origin",
"promotion_type",
"age_of_female_head",
"age_of_male_head",
"age_and_presence_of_children",
"male_head_employment",
"female_head_employment",
"male_head_education","female_head_education",
"male_head_occupation",
"female_head_occupation",
"household_composition",
"type_of_residence",
"kitchen_appliances",
"pay_tv",
"internet")]
model_a2<-lm(log(quantity+1) ~ .,data = base_reg)
model_a<-lm(unit_price~quantity,data = base)
stargazer(model_a, type = "latex", title="Regresión", digits=1)
# quitamos columnas irrelevantes
base<- select (base,-c(sabores_pop))
model_a<-lm(unit_price~quantity,data = base)
stargazer(model_a, type = "latex", title="Regresión", digits=1)
# quitamos columnas irrelevantes
base<- select (base,-c(sabores_pop))
base<-base%>%
mutate(sabores_pop= ifelse(flavor_descr=='CHERRY GRCA','cherry grca',
(ifelse(flavor_descr=='CHC FUDGE BROWNIE','chc fudge brownie',
(ifelse(flavor_descr=='CHC CHIP C-DH','chc chip c-dh','otros'))))))
ggplot(data = base, aes(y=log(quantity+1),
x=log(unit_price+1),
col=as.factor(sabores_pop))) +
geom_point(size=1, alpha=0.3) +
geom_smooth(method='lm',
formula= y~(x),
se=FALSE, size=1)+
theme_bw()+
labs(title="Elasticidad precio demanda de helado por sabor",
y="Cantidad demandada (log)",
x="Precio unitario (log)",
col="Sabor")+ theme_economist() + scale_fill_economist()
model_a<-lm(unit_price~quantity,data = base)
stargazer(model_a, type = "latex", title="Regresión", digits=1)
# quitamos columnas irrelevantes
base<- select (base,-c(sabores_pop))
# convertimos sabores en dummies y ponemos como base los de vainilla
base$flavor_descr <- relevel(factor(base$flavor_descr),"VAN")
#base$size1_descr <- factor(base$size1_descr,levels=1:2, labels=c("small","big"))
# uso de cupon / no uso de cupon
base$coupon <- factor(base$coupon_value>0)
# región
levels(base$region) <- c("East","Central","South","West")
# estado civil
base$married <- factor(base$marital_status==1)
# raza
base$race <- factor(base$race, levels= 1:4)
levels(base$race) <- c("White","Black","Asian","Other")
# hispano
base$hispanic_origin <- factor(base$hispanic_origin==1)
# fórmula
base$formula_descr <- as.factor(base$formula_descr)
# tamaño
base$size1_descr <- as.factor(base$size1_descr)
# tvs
base$pay_tv <- base$tv_items>1
# internet
base$internet <- base$household_internet_connection==1
base$log_price <- log(base$unit_price+1)
base_reg<- base[,c("quantity",
"log_price",
"flavor_descr",
"size1_descr",
"household_income",
"household_size",
"coupon",
"region",
"married",
"race",
"hispanic_origin",
"promotion_type",
"age_of_female_head",
"age_of_male_head",
"age_and_presence_of_children",
"male_head_employment",
"female_head_employment",
"male_head_education","female_head_education",
"male_head_occupation",
"female_head_occupation",
"household_composition",
"type_of_residence",
"kitchen_appliances",
"pay_tv",
"internet")]
model_a2<-lm(log(quantity+1) ~ .,data = base_reg)
model_a<-lm(unit_price~quantity,data = base)
stargazer(model_a, type = "latex", title="Regresión", digits=1)
# quitamos columnas irrelevantes
base<- select (base,-c(sabores_pop))
stargazer(model_a2, title="Regresión", digits=1, out.header=TRUE,type="html", out="test.html")
# para model_a2
(names(model_a2))
glance(model_a2)
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
summary(model_a2)
# quitamos columnas irrelevantes
base<- select (base,-c(sabores_pop))
# para model_a2
(names(model_a2))
glance(model_a2)
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
summary(model_a2)
# para model_a2
(names(model_a2))
glance(model_a2)
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
summary(model_a2)
# para model_a2
(tibble(model_a2))
tibble(model_a2)
tib(model_a2)
drim(model_a2)
tidy(model_a2)
tidy(model_a2)
glance(model_a2)
# En cuanto a elementos del objeto (tanto de variables como del modelo en general)
tidy(model_a2)
glance(model_a2)
#En cuanto a la prueba F
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
# para model_a2
x <- mean(base$unit_price)
y <- mean(base$quantity)
beta <- model_a2$coefficients[2]
elasticity <- beta * (x/y)
# A primera vista sí es significativo
paste("La elasticidad precio de la demanda es de",round(elasticity,2),"%")
paste("Ante un aumento de 1% en el precio, la cantidad demandada se reduce en",round(elasticity,2),"%")
beta2 <- model_a$coefficients[2]
beta2*(y/x)
valores_p <- summary(model_a2)$coefficients[2:k,4]
hist(summary(model_a2)$coefficients[2:k,4])
# para model_a2
x <- mean(base$unit_price)
y <- mean(base$quantity)
beta <- model_a2$coefficients[2]
elasticity <- beta * (x/y)
# A primera vista sí es significativo
paste("La elasticidad precio de la demanda es de",round(elasticity,2),"%")
paste("Ante un aumento de 1% en el precio, la cantidad demandada se reduce en",round(elasticity,2),"%")
beta2 <- model_a$coefficients[2]
beta2*(y/x)
# para model_a2
x <- mean(base$unit_price)
y <- mean(base$quantity)
beta <- model_a2$coefficients[2]
elasticity <- beta * (x/y)
# A primera vista sí es significativo
paste("La elasticidad precio de la demanda es de",round(elasticity,2),"%")
paste("Ante un aumento de 1% en el precio, la cantidad demandada se reduce en",round(elasticity,2),"%")
beta2 <- model_a$coefficients[2]
beta2*(y/x)
tidy(model_a2)
as.data.frame(tidy(model_a2))
pvalues<-as.data.frame(tidy(model_a2))
View(pvalues)
pvalues<-as.data.frame(tidy(model_a2))
count(is.na(pvalues$p.value))
pvalues<-as.data.frame(tidy(model_a2))
pvalues$p.value(na_count)
pvalues<-as.data.frame(tidy(model_a2))
pvalues$`p.value`(na_count)
pvalues<-as.data.frame(tidy(model_a2))
colSums(is.na(pvalues$p.value))
pvalues<-as.data.frame(tidy(model_a2))
colSums(is.na(pvalues))
pvalues<-as.data.frame(tidy(model_a2))
colSums(is.na(pvalues))
length(pvalues)
pvalues<-as.data.frame(tidy(model_a2))
colSums(is.na(pvalues))
row_number(pvalues)
pvalues<-as.data.frame(tidy(model_a2))
colSums(is.na(pvalues))
nrow(pvalues)
pvalues<-as.data.frame(tidy(model_a2))
colSums(is.na(pvalues))
nrow(pvalues)
161-6
pvalues<-as.data.frame(tidy(model_a2))
colSums(is.na(pvalues))
nrow(pvalues)
hist(pvalues$p.value)
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666"
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")+ geom_histogram(bins=50)
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")+ geom_histogram(bins=161)
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")+ geom_histogram(bins=155)
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), colour="black", fill="white".bins=155)+
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins,=155, colour="black", fill="white")+
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")+ theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+ theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
labs(title="Histográma de p values") theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
labs(title="Histográma de p values") theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.05, label=paste("p value =",.05), y=4800),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.05, label=paste("p value =",.05), y=1),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.05, label=paste("p value =",.05), y=19),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.05, label=paste("p value =",.25), y=19),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.05, label=paste("p value =",1.25), y=19),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.05, label=paste("p value =",12), y=19),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.05, label=paste("p value =",120), y=19),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=1.05, label=paste("p value =",.05), y=19),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.25, label=paste("p value =",.05), y=19),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.28, label=paste("p value =",.05), y=19),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.28, label=paste("p value =",.05), y=15),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histográma de p values") +theme_economist() + scale_fill_economist()
ggplot(pvalues, aes(x=p.value)) +
geom_histogram(aes(y=..density..), bins=155, colour="black", fill="white")+
theme_bw()+
geom_vline(xintercept = .05,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=.28, label=paste("p value =",.05), y=15),size=4, colour="red", vjust = -1, hjust = 1.2)+
labs(title="Histograma de p values") +theme_economist() + scale_fill_economist()
# Función(vector de valores p, q)
fdr <- function(valores_p,q){
valores_p <- valores_p[!is.na(valores_p)]
n <<- length(valores_p)
k <- rank (valores_p,ties.method="min")
t <- valores_p <= q*k/n
t[valores_p<max(valores_p[t])] <- TRUE
orden <- order(valores_p)
valores_p_ordenados <<- valores_p[orden]
plot(valores_p[orden])
lines(1:n, q*(1:n)/n, col='red')
return(max(valores_p[t]))
}
q<- 0.05
fdr(valores_p,q)
fdr_save <- fdr(valores_p,q)
plot(valores_p_ordenados,ylim=c(0,q+0.025),xlim=c(0,50))
lines(1:n, q*(1:n)/n,col='red')
abline(h = q)
# prueba
# abc <- c(0.52, 0.07, 0.013, 0.0001, 0.26, 0.04, 0.01, 0.15, 0.03, 0.0002)
# alternativa
fdr2 <- p.adjust(p=valores_p,method="BH")
names(fdr2) <- fdr2 <=0.05
fdr2
# Antes
sum(valores_p<0.05)
# Con FDR
sum(valores_p<fdr_save)
valores_p <- summary(model_a2)$coefficients[,4]
# Función(vector de valores p, q)
fdr <- function(valores_p,q){
valores_p <- valores_p[!is.na(valores_p)]
n <<- length(valores_p)
k <- rank (valores_p,ties.method="min")
t <- valores_p <= q*k/n
t[valores_p<max(valores_p[t])] <- TRUE
orden <- order(valores_p)
valores_p_ordenados <<- valores_p[orden]
plot(valores_p[orden])
lines(1:n, q*(1:n)/n, col='red')
return(max(valores_p[t]))
}
q<- 0.05
fdr(valores_p,q)
fdr_save <- fdr(valores_p,q)
plot(valores_p_ordenados,ylim=c(0,q+0.025),xlim=c(0,50))
lines(1:n, q*(1:n)/n,col='red')
abline(h = q)
# prueba
# abc <- c(0.52, 0.07, 0.013, 0.0001, 0.26, 0.04, 0.01, 0.15, 0.03, 0.0002)
# alternativa
fdr2 <- p.adjust(p=valores_p,method="BH")
names(fdr2) <- fdr2 <=0.05
fdr2
model_a<-lm(unit_price~quantity,data = base)
stargazer(model_a, type = "latex", title="Regresión", digits=1,out.header=TRUE)
library(ggthemes)
median_price <- quantile(base$unit_price)[3]
ggplot(base)+
geom_histogram(aes(x=unit_price),alpha=0.9,col = 'black')+
geom_vline(xintercept = median_price,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=median_price+2.8, label=paste("Mediana =",median_price), y=4800),size=4, colour="red", vjust = -1, hjust = 1.2)+
theme_bw()+
labs(title="Histograma de precio unitario",x="Precio unitario",y="Frecuencia")+ theme_economist() + scale_fill_economist()
ggplot(base)+
geom_histogram(aes(x=quantity),binwidth=1,alpha=0.9,col = 'black')+
theme_bw()+
labs(title="Histograma de cantidad",x="Cantidad",y="Frecuencia")+ theme_economist() + scale_fill_economist()
