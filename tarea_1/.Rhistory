labs(title="Demanda de helados en función del precio",
x="Precio unitario",y="Cantidad demandada")+
theme_economist() + scale_fill_economist()
ggplot(base)+
geom_point(aes(y=log(quantity+1),x=log(unit_price+1)))+
geom_smooth(formula=y~x,method=lm, color='2',
aes(y = log(quantity+1), x = log(unit_price+1)))+
theme_bw()+
labs(title = "Elasticidad precio de la demanda de helados",
x="Precio unitario (log)", y="Cantidad demandada (log)")+
theme_economist() + scale_fill_economist()
ggplot(data = base, aes(y=log(quantity+1), x=log(unit_price+1),
col=as.factor(size1_descr))) +
geom_point(size=1, alpha=0.5) +
geom_smooth(aes(group=size1_descr), method='lm',
formula= y~(x),
se=FALSE, size=1)+
theme_bw()+
labs(title="Elasticidad precio demanda de helado por tamaño",
y="Cantidad demandada (log)",
x="Precio unitario (log)",
col="Tamaño")+
theme_economist() + scale_fill_economist()
# Prueba de hipotesis
elast_size <- lm(log(quantity+1)~log(unit_price+1)*size1_descr,
data=base)
hip_size <- c(0,0,0,1)
library(car)
linearHypothesis(elast_size,hip_size, rhs = NULL, white.adjust="hc1")
kable(
head(base%>% select(flavor_descr)%>% group_by(flavor_descr)%>%
summarize(n())%>% arrange(desc(`n()`))),
col.names = c("Sabor","Observaciones"),booktabs=T)%>%
kable_styling(position = "center")
base<-base%>%
mutate(sabores_pop= ifelse(flavor_descr=='CHERRY GRCA','cherry grca',
(ifelse(flavor_descr=='CHC FUDGE BROWNIE','chc fudge brownie',
(ifelse(flavor_descr=='CHC CHIP C-DH','chc chip c-dh','otros'))))))
ggplot(data = base, aes(y=log(quantity+1),
x=log(unit_price+1),
col=as.factor(sabores_pop))) +
geom_point(size=1, alpha=0.3) +
geom_smooth(method='lm',
formula= y~(x),
se=FALSE, size=1)+
theme_bw()+
labs(title="Elasticidad precio demanda de helado por sabor",
y="Cantidad demandada (log)",
x="Precio unitario (log)",
col="Sabor")+ theme_economist() + scale_fill_economist()
elast_sabores <- lm(log(quantity+1)~log(unit_price+1)*relevel(as.factor(sabores_pop),
ref='otros'),
data=base)
hipchip <- c(0,0,0,0,0,1,0,0)
hipfudge <- c(0,0,0,0,0,0,1,0)
hipcherry <- c(0,0,0,0,0,0,0,1)
linearHypothesis(elast_sabores,hipchip, rhs = NULL, white.adjust="hc1")
linearHypothesis(elast_sabores,hipfudge, rhs = NULL, white.adjust="hc1")
linearHypothesis(elast_sabores,hipcherry, rhs = NULL, white.adjust="hc1")
hipcherryfudge <- c(0,0,0,0,0,0,1,-1)
hipcherrychip <- c(0,0,0,0,0,1,0,-1)
hipchipfudge <- c(0,0,0,0,0,1,-1,0)
linearHypothesis(elast_sabores,hipchipfudge, rhs = NULL, white.adjust="hc1")
linearHypothesis(elast_sabores,hipcherryfudge, rhs = NULL, white.adjust="hc1")
linearHypothesis(elast_sabores,hipcherrychip, rhs = NULL, white.adjust="hc1")
base$female_head_birth<-NULL
base$male_head_birth<-NULL
model_a<-lm(unit_price~quantity,data = base)
stargazer(model_a, type = "latex", title="Regresión", digits=1,header=FALSE)
# convertimos sabores en dummies y ponemos como base los de vainilla
base$flavor_descr <- relevel(factor(base$flavor_descr),"VAN")
#base$size1_descr <- factor(base$size1_descr,levels=1:2, labels=c("small","big"))
# uso de cupon / no uso de cupon
base$coupon <- factor(base$coupon_value>0)
# región
levels(base$region) <- c("Region1","Region2","Region3","Region4")
# estado civil
base$married <- factor(base$marital_status==1)
# raza
base$race <- factor(base$race, levels= 1:4)
levels(base$race) <- c("Race1","Race2","Race3","Race4")
# hispano
base$hispanic_origin <- factor(base$hispanic_origin==1)
# fórmula
base$formula_descr <- as.factor(base$formula_descr)
# tamaño
base$size1_descr <- as.factor(base$size1_descr)
# tvs
base$tvs <- base$tv_items>1
# internet
base$internet <- base$household_internet_connection==1
base$log_price <- log(base$unit_price+1)
# quitamos columnas irrelevantes y que sirven como identificadoras
#base_reg <- select (base,-c(sabores_pop,
#                            quantity,
#                            unit_price, price_paid_deal, price_paid_non_deal
#                            id, id_trans, household_id,
#                            fips_county_code, fips_state_code))
base_reg<- base[,c("quantity",
"log_price",
"flavor_descr",
"size1_descr",
"household_income",
"household_size",
"coupon",
"region",
"married",
"race",
"hispanic_origin",
"promotion_type",
"age_of_female_head",
"age_of_male_head",
"age_and_presence_of_children",
"male_head_employment",
"female_head_employment",
"male_head_education","female_head_education",
"male_head_occupation",
"female_head_occupation",
"household_composition",
"type_of_residence",
"kitchen_appliances",
"tvs",
"internet")]
model_a2<-lm(log(quantity+1) ~ .,data = base_reg)
tidy(model_a2)
glance(model_a2)
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
# para model_a2
x <- mean(base$unit_price)
y <- mean(base$quantity)
beta <- model_a2$coefficients[2]
elasticity <- beta
# Significancia
tidy(model_a2)$p.value[2]
# Significancia b)
tidy(model_a2)$statistic[2]
# Interpretación
round(elasticity,2)
round(elasticity,2)
pvalues<-as.data.frame(tidy(model_a2))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = F)
RSS <- sum(model_a2$residuals^2)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = F)
# Carga las librerias
library(ggplot2)
library(dplyr)
library(RCT)
library(knitr)
library(broom)
library(stargazer)
library(kableExtra)
library(naniar)
library(ggthemes)
# Carga la base de datos
base<-read.csv("BenAndJerry.csv")
columnas <- (as.data.frame(colnames(base)))
kable(columnas, booktabs=T, align = 'c', col.names = c("Columnas"), longtable=T) %>%
kable_styling(position = "center",latex_options = "repeat_header")
sum(as.numeric(duplicated(base)))
base <- base %>% group_by(household_id) %>%
mutate(id_trans = sequence(n())) %>% ungroup()
base$id<-paste(base$household_id, base$id_trans, sep="-")
#Ejemplo:
kable(head(base$id), col.names = c("Ejemplo"), booktabs=T)%>%
kable_styling(position = "center",latex_options = "repeat_header")
# subset de las variables de texto
charvar <- select(base,c(6:8,32,33))
# revisamos que no tengan valores vacíos
table(charvar$size1_descr=="")
table(charvar$flavor_descr=="")
table(charvar$formula_descr=="")
table(charvar$female_head_birth=="")
table(charvar$male_head_birth=="")
base$female_head_birth[base$female_head_birth==""]<- NA
base$male_head_birth[base$male_head_birth==""]<-NA
kable( (base %>% select_if(~sum(is.na(.)) > 0) %>%
miss_var_summary()), booktabs=T, align = 'c',
col.names = c("Variale", "Cantidad","%"),digits = 2)%>%
kable_styling(position = "center")
summary(factor(base$promotion_type))
base$promotion_type[is.na(base$promotion_type)] <- 0
summary(factor(base$scantrack_market_identifier))
susp<-base%>% select(fips_state_code,fips_county_code,
scantrack_market_identifier)%>%
mutate(estado_condado=paste(fips_state_code,"-",fips_county_code))%>%
group_by(estado_condado,scantrack_market_identifier)%>%
summarize(n())
kable(head(susp),booktabs=T,
col.names = c("Ejemplo Estado-Condado","scantrack_market_identifier",
"Observaciones"))%>%
kable_styling(position = "center",latex_options = "repeat_header")
length(unique((susp$estado_condado)))
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n())
kable(head(susp_2,10),booktabs=T,
col.names = c("Ejemplo Estado","scantrack_market_identifier",
"Observaciones"))%>%
kable_styling(position = "center",latex_options = "repeat_header")
susp_2<-base%>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code,scantrack_market_identifier)%>%
summarize(n()) %>% ungroup() %>%
group_by(fips_state_code)%>%
summarize(n())
kable(head(susp_2,10),booktabs=T,
col.names = c("Ejemplo Estado",
"cantidad de scantrack_market_identifier diferentes"))%>%
kable_styling(position = "center",latex_options = "repeat_header")
#promedio de categoría de scantrack_market_identifier por estado
mean(susp_2$`n()`)
#Imputación de la moda
#Creo mi tabla de modas
llave_imputaciones<-base %>% select(fips_state_code,scantrack_market_identifier)%>%
group_by(fips_state_code) %>% count(scantrack_market_identifier) %>% top_n(1) %>%
rename(moda=scantrack_market_identifier)
llave_imputaciones$n<-NULL
#Imputo
base<-merge(base,llave_imputaciones, by = "fips_state_code")
base<-base%>%mutate(scantrack_market_identifier=
ifelse(is.na(scantrack_market_identifier),moda,scantrack_market_identifier))
sum(is.na(base$scantrack_market_identifier))
base$scantrack_market_identifier[is.na(base$scantrack_market_identifier)] <- 0
aux<-base %>% select(age_of_female_head,
female_head_occupation,
female_head_education,
female_head_employment,
female_head_birth) %>%
filter (is.na(female_head_occupation))
summary((aux))
summary(aux$age_of_female_head[aux$female_head_birth==""])
base$female_head_occupation[is.na(base$female_head_occupation)] <- 0
base$female_head_birth[is.na(base$female_head_birth)] <- "unknown"
aux2<-base %>% select(age_of_male_head,
male_head_occupation,
male_head_education,
male_head_employment,
male_head_birth) %>%
filter (is.na(male_head_birth))
summary((aux2))
base$male_head_birth[is.na(base$male_head_birth)] <- "unknown"
base$tv_items[is.na(base$tv_items)] <- 0
summary(factor(base$tv_items))
b <- read.csv("BenAndJerry.csv")
b<- summary_statistics(b,probs=c(0,0.05,0.25,0.5,0.75,0.9,0.95,1),na.rm=T)
b<- b %>% mutate_at(vars(-variable),funs(round(.,2))) %>%
rename(mín=4) %>%
rename(máx=11)
options(scipen=999) # quitamos notación científica
kable(b,booktabs=T, align = 'c')%>%
kable_styling(position = "center")%>%
kable_styling(latex_options="scale_down")
numericas<-base%>% select(where(is.numeric))
summary(numericas)
variables_seguras<-c("promotion_type",
"household_income",
"age_of_female_head",
"age_of_male_head",
"male_head_employment",
"female_head_employment",
"marital_status",
"male_head_occupation",
"female_head_occupation",
"household_composition",
"race",
"hispanic_origin",
"region",
"scantrack_market_identifier",
"fips_state_code",
"fips_county_code",
"type_of_residence",
"household_internet_connection")
variables_no_seguras<-c("tv_items",
"kitchen_appliances",
"age_and_presence_of_children",
"male_head_education",
"female_head_education")
base[,variables_seguras] <- lapply(base[,variables_seguras] , factor)
base[,variables_no_seguras] <- lapply(base[,variables_no_seguras] , factor)
summary(base[,variables_no_seguras])
variables_numericas<-c("tv_items",
"kitchen_appliances",
"age_and_presence_of_children")
base[,variables_numericas] <- lapply(base[,variables_numericas] , as.numeric)
myhist <- function(yvar){
ggplot(numericas, aes_(x=as.name(yvar)))+
geom_histogram()+
ggtitle(paste0(as.name(yvar)))+
xlab("")+
ylab("")+
theme(axis.text.y = element_blank())
}
hists<- numericas %>% select(price_paid_deal,
price_paid_non_deal,
coupon_value,
household_size:household_composition,
scantrack_market_identifier,
kitchen_appliances,
tv_items) %>%
names() %>%
lapply(myhist)
library(gridExtra)
grid.arrange(grobs=hists[1:10],ncol=4)
grid.arrange(grobs=hists[11:19],ncol=4)
# precio total pagado
base <- base %>% mutate(total_price=price_paid_deal+price_paid_non_deal)
# precio unitario
base <- base %>% mutate(unit_price= (total_price)/quantity)
median_price <- quantile(base$unit_price)[3]
ggplot(base)+
geom_histogram(aes(x=unit_price),alpha=0.9,col = 'black')+
geom_vline(xintercept = median_price,size=0.5,colour="red", linetype = "dashed")+
geom_text(aes(x=median_price+2.8, label=paste("Mediana =",median_price),
y=4800),size=4, colour="red", vjust = -1, hjust = 1.2)+
theme_bw()+
labs(title="Histograma de precio unitario",x="Precio unitario",y="Frecuencia")+
theme_economist() + scale_fill_economist()
ggplot(base)+
geom_histogram(aes(x=quantity),binwidth=1,alpha=0.9,col = 'black')+
theme_bw()+
labs(title="Histograma de cantidad",x="Cantidad",y="Frecuencia")+
theme_economist() + scale_fill_economist()
ggplot(base)+
geom_point(aes(y=quantity, x=unit_price))+
geom_smooth(formula=y~x,method=lm, color='2',aes(y=quantity, x=unit_price))+
theme_bw()+
labs(title="Demanda de helados en función del precio",
x="Precio unitario",y="Cantidad demandada")+
theme_economist() + scale_fill_economist()
ggplot(base)+
geom_point(aes(y=log(quantity+1),x=log(unit_price+1)))+
geom_smooth(formula=y~x,method=lm, color='2',
aes(y = log(quantity+1), x = log(unit_price+1)))+
theme_bw()+
labs(title = "Elasticidad precio de la demanda de helados",
x="Precio unitario (log)", y="Cantidad demandada (log)")+
theme_economist() + scale_fill_economist()
ggplot(data = base, aes(y=log(quantity+1), x=log(unit_price+1),
col=as.factor(size1_descr))) +
geom_point(size=1, alpha=0.5) +
geom_smooth(aes(group=size1_descr), method='lm',
formula= y~(x),
se=FALSE, size=1)+
theme_bw()+
labs(title="Elasticidad precio demanda de helado por tamaño",
y="Cantidad demandada (log)",
x="Precio unitario (log)",
col="Tamaño")+
theme_economist() + scale_fill_economist()
# Prueba de hipotesis
elast_size <- lm(log(quantity+1)~log(unit_price+1)*size1_descr,
data=base)
hip_size <- c(0,0,0,1)
library(car)
linearHypothesis(elast_size,hip_size, rhs = NULL, white.adjust="hc1")
kable(
head(base%>% select(flavor_descr)%>% group_by(flavor_descr)%>%
summarize(n())%>% arrange(desc(`n()`))),
col.names = c("Sabor","Observaciones"),booktabs=T)%>%
kable_styling(position = "center")
base<-base%>%
mutate(sabores_pop= ifelse(flavor_descr=='CHERRY GRCA','cherry grca',
(ifelse(flavor_descr=='CHC FUDGE BROWNIE','chc fudge brownie',
(ifelse(flavor_descr=='CHC CHIP C-DH','chc chip c-dh','otros'))))))
ggplot(data = base, aes(y=log(quantity+1),
x=log(unit_price+1),
col=as.factor(sabores_pop))) +
geom_point(size=1, alpha=0.3) +
geom_smooth(method='lm',
formula= y~(x),
se=FALSE, size=1)+
theme_bw()+
labs(title="Elasticidad precio demanda de helado por sabor",
y="Cantidad demandada (log)",
x="Precio unitario (log)",
col="Sabor")+ theme_economist() + scale_fill_economist()
elast_sabores <- lm(log(quantity+1)~log(unit_price+1)*relevel(as.factor(sabores_pop),
ref='otros'),
data=base)
hipchip <- c(0,0,0,0,0,1,0,0)
hipfudge <- c(0,0,0,0,0,0,1,0)
hipcherry <- c(0,0,0,0,0,0,0,1)
linearHypothesis(elast_sabores,hipchip, rhs = NULL, white.adjust="hc1")
linearHypothesis(elast_sabores,hipfudge, rhs = NULL, white.adjust="hc1")
linearHypothesis(elast_sabores,hipcherry, rhs = NULL, white.adjust="hc1")
hipcherryfudge <- c(0,0,0,0,0,0,1,-1)
hipcherrychip <- c(0,0,0,0,0,1,0,-1)
hipchipfudge <- c(0,0,0,0,0,1,-1,0)
linearHypothesis(elast_sabores,hipchipfudge, rhs = NULL, white.adjust="hc1")
linearHypothesis(elast_sabores,hipcherryfudge, rhs = NULL, white.adjust="hc1")
linearHypothesis(elast_sabores,hipcherrychip, rhs = NULL, white.adjust="hc1")
base$female_head_birth<-NULL
base$male_head_birth<-NULL
model_a<-lm(unit_price~quantity,data = base)
stargazer(model_a, type = "latex", title="Regresión", digits=1,header=FALSE)
# convertimos sabores en dummies y ponemos como base los de vainilla
base$flavor_descr <- relevel(factor(base$flavor_descr),"VAN")
#base$size1_descr <- factor(base$size1_descr,levels=1:2, labels=c("small","big"))
# uso de cupon / no uso de cupon
base$coupon <- factor(base$coupon_value>0)
# región
levels(base$region) <- c("Region1","Region2","Region3","Region4")
# estado civil
base$married <- factor(base$marital_status==1)
# raza
base$race <- factor(base$race, levels= 1:4)
levels(base$race) <- c("Race1","Race2","Race3","Race4")
# hispano
base$hispanic_origin <- factor(base$hispanic_origin==1)
# fórmula
base$formula_descr <- as.factor(base$formula_descr)
# tamaño
base$size1_descr <- as.factor(base$size1_descr)
# tvs
base$tvs <- base$tv_items>1
# internet
base$internet <- base$household_internet_connection==1
base$log_price <- log(base$unit_price+1)
# quitamos columnas irrelevantes y que sirven como identificadoras
#base_reg <- select (base,-c(sabores_pop,
#                            quantity,
#                            unit_price, price_paid_deal, price_paid_non_deal
#                            id, id_trans, household_id,
#                            fips_county_code, fips_state_code))
base_reg<- base[,c("quantity",
"log_price",
"flavor_descr",
"size1_descr",
"household_income",
"household_size",
"coupon",
"region",
"married",
"race",
"hispanic_origin",
"promotion_type",
"age_of_female_head",
"age_of_male_head",
"age_and_presence_of_children",
"male_head_employment",
"female_head_employment",
"male_head_education","female_head_education",
"male_head_occupation",
"female_head_occupation",
"household_composition",
"type_of_residence",
"kitchen_appliances",
"tvs",
"internet")]
model_a2<-lm(log(quantity+1) ~ .,data = base_reg)
tidy(model_a2)
glance(model_a2)
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
RSS
TSS
TSS-RSS
summary(model_a2)
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
RSS
TSS
TSS-RSS
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
RSS
TSS
TSS-RSS
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((.07238)/k)/(1-.07238/(n-k-1)))
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
summary(model_a2)
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
base<-base%>% mutate(pred=predict(model_a2))
RSS <- sum(model_a2$residuals^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
base<-base%>% mutate(pred=predict(model_a2))
RSS <- sum(base$pred^2)
TSS<- sum((base$quantity-mean(base$quantity))^2)
n<- length(base$unit_price)
k<- sum(!is.na(model_a2$coefficients))
(F <- ((TSS-RSS)/k)/(RSS/(n-k-1)))
base<-base%>% mutate(pred=predict(model_a2))
RSS <- sum(log(base$(quantity+1)) - base$pred^2)
base<-base%>% mutate(pred=predict(model_a2))
RSS <- sum(log(base$(quantity+1))) - base$pred^2)
