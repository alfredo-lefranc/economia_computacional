install.packages("dagitty")
g1 <- dagitty('dag{
"Cámara"->"Atención"->"Aprendizaje"
"Cámara"->"Dinamismo"->"Aprendizaje"
"Cámara"->"Conexión"->"Aprendizaje"
"Dinamismo"->"Atención"
}')
library(dagitty)
g1 <- dagitty('dag{
"Cámara"->"Atención"->"Aprendizaje"
"Cámara"->"Dinamismo"->"Aprendizaje"
"Cámara"->"Conexión"->"Aprendizaje"
"Dinamismo"->"Atención"
}')
plot(g1)
g2<-dagitty('dag{
"Cámara" [pos="0,1"]
"Atención" [pos="1,0"]
"Dinamismo" [pos="1,1"]
"Conexión" [pos="1,2"]
"Aprendizaje" [pos="2,1"]
"Cámara"->"Atención"->"Aprendizaje"
"Cámara"->"Dinamismo"->"Aprendizaje"
"Cámara"->"Conexión"->"Aprendizaje"
"Dinamismo"->"Atención"
')
plot(g2)
g2<-dagitty('dag{
"Cámara" [pos="0,1"]
"Atención" [pos="1,0"]
"Dinamismo" [pos="1,1"]
"Conexión" [pos="1,2"]
"Aprendizaje" [pos="2,1"]
"Cámara"->"Atención"->"Aprendizaje"
"Cámara"->"Dinamismo"->"Aprendizaje"
"Cámara"->"Conexión"->"Aprendizaje"
"Dinamismo"->"Atención"
}')
plot(g2)
g2<-dagitty('dag{
"Cámara" [pos="0,2"]
"Atención" [pos="1,0"]
"Dinamismo" [pos="1,1"]
"Conexión" [pos="1,2"]
"Aprendizaje" [pos="2,1"]
"Cámara"->"Atención"->"Aprendizaje"
"Cámara"->"Dinamismo"->"Aprendizaje"
"Cámara"->"Conexión"->"Aprendizaje"
"Dinamismo"->"Atención"
}')
plot(g2)
g2<-dagitty('dag{
"Cámara" [pos="0,1"]
"Atención" [pos="1,0"]
"Dinamismo" [pos="1,1"]
"Conexión" [pos="1,2"]
"Aprendizaje" [pos="2,1"]
"Cámara"->"Atención"->"Aprendizaje"
"Cámara"->"Dinamismo"->"Aprendizaje"
"Cámara"->"Conexión"->"Aprendizaje"
"Dinamismo"->"Atención"
}')
plot(g2)
#
g3<-dagitty('dag{
"Cámara" [pos="0,1"]
"Atención" [pos="1,0.5"]
"Dinamismo" [pos="1,0"]
"Conexión" [pos="1,1"]
"Aprendizaje" [pos="2,1"]
"Privacidad" [pos="0.5,1.5"]
"Participación" [pos="1,2"]
"Cámara"->"Atención"->"Aprendizaje"
"Cámara"->"Dinamismo"->"Aprendizaje"
"Cámara"->"Conexión"->"Aprendizaje"
"Cámara"->"Privacidad"->"Participación"->"Aprendizaje"
"Dinamismo"->"Atención"
"Conexión"->"Participación"
}')
plot(g3)
install.packages("rethinking")
library(rethinking)
# para agregar formato
install.packages("ggdag")
library(ggdag)
drawdag(g3, col_labels="blue", col_arrow="red")
ggdag(g3, col_labels="blue", col_arrow="red")
ggdag(g3)
ggdag(g3)+theme_bw()
install.packages("Matching")
library(Matching)
data("lalonde")
attach(lalonde)
View(lalonde)
install.packages("EnvStats")
library(EnvStats)
x<-re78[treat==1]/1000
y<-re78[treat==0]/1000
twoSamplePermutationTestLocation(x, y,
alternative="two.sided",
seed=123)
# ¨Neyman
yiT<-re78[treat==1]/1000
yiC<-re78[treat==0]/1000
myiT<-mean(yiT)
myiC<-mean(yiC)
tau<-abs(myiT-mtiC)
tau<-abs(myiT-myiC)
#varianzas
(vartau<-var(yiT)/length(yiT)+
var(yiC)/length(yiC))
(tstat<-tau/sqrt(vartau))
2*(1-pnorm(tstat))
twoSamplePermutationTestLocation(x, y,
alternative="two.sided",
seed=123)
library(Matching)
data(lalonde)
attach(lalonde)
# RTC y MCO
mean(re78[treat==1]) - mean(re78[treat==0])
library(stargazer)
reg1<-lm(re78~treat)
stargazer(reg1,type="text")
# comparacion de medias entre grupos
c(mean(age[treat==1]),mean(age[treat==0]))
?t.test()
t.test(
x = age[treat==1],
y = age[treat==0],
alternative = "two.sided",
mu = 0,
var.equal = FALSE,
conf.level = 0.95
)
View(lalonde)
# Probamos para otra var
t.test(
x = age[married==1],
y = age[married==0],
alternative = "two.sided",
mu = 0,
var.equal = FALSE,
conf.level = 0.95
)
# Probamos para otra var
t.test(
x = married[treat==1],
y = married[treat==0],
alternative = "two.sided",
mu = 0,
var.equal = FALSE,
conf.level = 0.95
)
library(devtools)
install_github("isidorogu/RCT")
install.packages('rlang')
install.packages("rlang")
library(Matching)
data(lalonde)
attach(lalonde)
library(devtools)
install_github("isidorogu/RCT")
library(devtools)
install_github("isidorogu/RCT")
install.packages("devtools")
library(devtools)
install_github("isidorogu/RCT")
knitr::opts_chunk$set(
echo = TRUE,
fig.height = 4,
fig.width = 6,
message = FALSE,
warning = FALSE,
cache = TRUE,
digits = 3,
width = 48
)
library(tidyverse)
install.packages(tidyverse)
install.packages('tidyverse')
install.packages("tidyverse")
knitr::opts_chunk$set(
echo = TRUE,
fig.height = 4,
fig.width = 6,
message = FALSE,
warning = FALSE,
cache = TRUE,
digits = 3,
width = 48
)
library(tidyverse)
# Carga la base de datos
base<-fread(list.files(pattern = '.csv'))
#library(tidyverse)
library(data.table)
library(RCT)
library(knitr)
library(lfe)
library(broom)
# Carga la base de datos
base<-fread(list.files(pattern = '.csv'))
library('tidyverse')
install.packages('fansi')
library(tidyverse)
library(data.table)
library(RCT)
library(knitr)
library(lfe)
library(broom)
# Carga la base de datos
base<-fread(list.files(pattern = '.csv'))
setwd("~/itam/Computacional/Tareas/economia_computacional/tarea1")
# Carga la base de datos
base<-fread(list.files(pattern = '.csv'))
View(base)
setwd("~/itam/Computacional/Tareas/economia_computacional")
setwd("~/itam/Computacional/Tareas/economia_computacional/tarea1")
knitr::opts_chunk$set(
echo = TRUE,
fig.height = 4,
fig.width = 6,
message = FALSE,
warning = FALSE,
cache = TRUE,
digits = 3,
width = 48
)
library(tidyverse)
library(data.table)
library(RCT)
library(knitr)
library(lfe)
library(broom)
# Carga la base de datos
#setwd("C:/Users/rsf94/Google Drive/MAESTRÍA ITAM/2do semestre/eco_computacional/tarea1")
base <- fread("BenAndJerry.csv")
# Carga la base de datos
#setwd("C:/Users/rsf94/Google Drive/MAESTRÍA ITAM/2do semestre/eco_computacional/tarea1")
base <- fread("BenAndJerry.csv")
(columnas <- (as.data.frame(colnames(base))))
colnames(base)
str(base)
str(base) %>% as.data.frame
columnas2 <- str(base) %>% as.data.frame
columnas2 <- str(base) %>% as.tibble()
View(base)
(columnas <- (as.data.frame(colnames(base))))
summary(base)
missing<-base %>% summarise_each(funs(100*mean(is.na(.))))
missing <- round(missing,4)
missing <- setNames(data.frame(t(missing[,-1])),missing[,1])
names(missing)[1] <- "na_perc"
(missing %>% filter(na_perc!=0))
# Analisis valores faltantes
summary(promotion_type[base$price_paid_deal==0])
# Analisis valores faltantes
summary(promotion_type[base$price_paid_deal==0,])
# Analisis valores faltantes
summary(promotion_type[base$price_paid_deal==0],)
# Analisis valores faltantes
summary(base$promotion_type[base$price_paid_deal==0],)
summary(base$promotion_type)
table(base$promotion_type)
base$promotion_type[base$price_paid_deal==0],) <- 0
base$promotion_type[base$price_paid_deal==0]) <- 0
base$promotion_type[base$price_paid_deal==0] <- 0
